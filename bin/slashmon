#!/usr/bin/perl
# This code is a part of Slash, and is released under the GPL.
# Copyright 1997-2002 by Open Source Development Network. See README
# and COPYING for more information, or see http://slashcode.com/.

use File::Basename;
use Getopt::Std;
use Slash::Utility;
use Slash::DB;

my $PROGNAME = basename($0);

my %opts;

usage('Options used incorrectly') unless getopts('hvu:w:r:s:', \%opts);
usage() if $opts{h};
version() if $opts{v};

my $virtuser = $opts{u} || 'slashdot';
my $width = $opts{w} || 76;
my $height = $opts{r} || 20;
my $sleep = $opts{s} || 10;

createEnvironment($virtuser);

# Why is the word "abbreviation" so long?
# And why do we drive on parkways, but park on driveways?
my @abbreviations = qw( SELECT FROM WHERE INSERT DELETE UPDATE );
my %abbreviations = map { ( $_, uc substr($_,0,1) ) } @abbreviations;

my $slashdb = getCurrentDB();
my $constants = getCurrentStatic();


my $log=$slashdb->sqlSelectMany("host_addr,uid,op,dat,
                     DATE_FORMAT(ts,\"\%H:\%i\") AS ts,id",
                     "accesslog","id > ?",
                     "ORDER BY ts DESC");

my $proc=$slashdb->sqlShowProcessList();


my ($id)=$slashdb->sqlSelect("MAX(id)","accesslog"); 
my $starttime=time;
my $startsq=getQuestions();



while(1) {
	$proc->execute();
	print "\n\n";
	# system("clear");
	$active=0;
	undef @p;
	while(my $S=$proc->fetchrow_hashref() ) {
		next if $$S{Info} eq "accesslog";
		next if $$S{Command} eq "Sleep";
		next if $$S{Info} eq "SHOW PROCESSLIST";
		next unless $$S{Info};

		$active++;
		my $o=$$S{Time}." ";
		$o.=" " if $$S{Time} < 10;

		$$S{Info}=~s/\s+/ /g;
             	$$S{Info}=~s/[^_\'\-\+\.A-Z0-9\(\)<> ,=\|]//gi;
		$$S{Info}=~s/ +/ /g;
		$$S{Info}=~s/, /,/g;
		$$S{Info}=~s/\) /\)/g;
		$$S{Info}=~s/DATE_ADD\((.*)\)//g;
		$$S{Info}=~s/DATE_FORMAT\((.*)\)//g;
		for my $abbr (@abbreviations) {
			$$S{Info} =~ s/\b$abbr\b/$abbreviations{$abbr}/gi;
		}
		$$S{Info}=~s/\bSELECT\b/S/i;
		$o.=substr($$S{Info},0,$width);
		push @p,$o;

	}
	$proc->finish();

	open P, "/proc/loadavg";
	@la=split " ",<P>;
	$l="$la[0] $la[1] $la[2]";
	close P;

	my $oldsec=$sec;

	$oldsq=$sq;
	$oldsq||=1;
	$sq=getQuestions();
	$thissq=$sq - $oldsq;
	$totalsq=$sq - $startsq;

    	$sec=time - $starttime;
	my $timepassed=$sec - $oldsec;
	$sec||=1;
	$timepassed||=1;

	$log->bind_param(1,$id);
	$log->execute;

	my $oldtotal=$total;
    	$total+=$log->rows;
	my $thistotal=$total - $oldtotal;
	$total||=1;
	$thistotal||=1;

	print "Total:$sec ".
		"pages:$total ".
		"avg:".sprintf("%.2f",$total/$sec)." ".
		"sql:$totalsq ".
		"avg:".sprintf("%.2f",$totalsq/$sec)." ".
		"pp:".sprintf("%.2f",$totalsq/$total )."\n".

	       "  Now:$timepassed ".
		"pages:$thistotal ".
		"avg:".	sprintf("%.2f",$thistotal/$timepassed)." ".
		"sql:$thissq ".
		"avg:". sprintf("%.2f",$thissq/$timepassed)." ".
		"pp:".sprintf("%.2f",$thissq/$thistotal)."\n";
		
        print "  Sql:$active/".$proc->rows()." | $l\n";
        	
    	while(my $U=$log->fetchrow_hashref()) {
	        my $w="$$U{ts} $$U{host_addr} ($$U{uid})";
	        $w.= "\t" if length $w < 24;
	        $w.= "\t$$U{op}";
       	 	$w.= "\t" if length($$U{op}) < 8;
	        $w.= "\t$$U{dat}\n";
	        # print $w unless $ARGV[0] eq "sec";
	        $id=$$U{id} if $$U{id} > $id;
		++$num;
    	}
    	$proc->finish();

                  
	my $x=0;
 	foreach (sort{ $b <=> $a }@p ) {
		$x++;
		next if $x > $height;
		print "$_\n";
        }
	print "\n";

	sleep $sleep;
}



sub getQuestions
{
	my $c=$slashdb->sqlShowStatus();
	$c->execute();
	while (my ($q,$a)=$c->fetchrow() ) {
		$r=$a if $q eq "Questions";
	}
	$c->finish();
	return $r;

}

sub usage {
	print "*** $_[0]\n" if $_[0];
	# Remember to doublecheck these match getopts()!
	print <<EOT;

Usage: $PROGNAME [OPTIONS] ... [UIDs]

Monitor the Slash site's database.

Main options:
	-h      Help (this message)
	-v      Version
	-u      Virtual user (default "slashdot")
	-w	Width max in columns (default 76)
	-r	Height max in (r)ows (default 20)
	-s	Sleep time (default 10)

EOT
	exit;
}

sub version {
	print <<EOT;

$PROGNAME $VERSION

This code is a part of Slash, and is released under the GPL.
Copyright 1997-2002 by Open Source Development Network. See README
and COPYING for more information, or see http://slashcode.com/.

EOT
	exit;
}

