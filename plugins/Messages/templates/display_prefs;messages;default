__section__
default
__description__
* note = Note to display
* messagecodes = hashref of message codes
* displaymodes = hashref of delivery modes
__title__

__page__
messages
__lang__
en_US
__name__
display_prefs
__template__
[% messages = Slash.getObject("Slash::Messages") %]
[% Slash.createMenu("users") %]
[% Slash.createMenu("messages") %]
[% PROCESS titlebar title => "Message Preferences", width => "100%" %]
[% modenone = Slash.MSG_MODE_NONE %]
[% modemail = Slash.MSG_MODE_EMAIL %]
[% modeweb  = Slash.MSG_MODE_WEB %]

<P><B>[% note %]</B></P>

<FORM ACTION="[% env.script_name %]" METHOD="POST">
<TABLE ALIGN="CENTER" WIDTH="95%" BGCOLOR="[% user.bg.2 %]">
<TR><TD>

<P>
From this page you can configure various messages that
[% constants.sitename %] can optionally send to you.  The primary
options are [% deliverymodes.$modenone %],
[% deliverymodes.$modemail %], and [% deliverymodes.$modeweb %].
Not all options are available for all message types.
[% deliverymodes.$modeweb %] messages <B>will be deleted</B> after
<B>[% constants.message_web_expire || 31 %] days</B>.
</P>

</TD></TR>

	<TR><TD><TABLE ALIGN="LEFT" BGCOLOR="[% user.bg.2 %]">
[%
   FOR code = messagecodes.sort;
      moderef = { $modenone => deliverymodes.$modenone };

      # this is not so bad, it is cached, but could be improved perhaps
      mcode = messages.getMessageCode(code);
      IF user.seclev < mcode.seclev;
         NEXT;
      END;
      IF mcode.modes.length;
         modes = mcode.modes.split(",");
      ELSE;
         modes = deliverymodes.keys;
      END;

      FOR mode = modes;
         moderef.$mode = deliverymodes.$mode;
      END;
%]
<TR>
	<TD><B>[% messagecodes.$code %]</B></TD>
	<TD>[% Slash.createSelect("deliverymodes_$code", moderef, prefs.$code, 1, 1) %]</TD>
</TR>
[%- END %]
	</TABLE></TD></TR>

<TR><TD>
<P>
You may select a message threshold for when messages for comments (replies
to journal entries, replies to comments) are sent to you.
</P>

<P>[%
thresh = user.message_threshold.defined ? user.message_threshold : constants.message_threshold;
Slash.createSelect('message_threshold',
	Slash.db.getDescriptions('threshcodes'), thresh, 1)
%]</P>

</TD></TR>

<TR>
	<TD>&nbsp;</TD>
	<TD>
	<INPUT TYPE="hidden" NAME="op" VALUE="save_prefs">
	<INPUT TYPE="submit" VALUE="Save Prefs">
	</TD>
</TR>
	</TABLE></TD></TR>

</TABLE>

</FORM>
__seclev__
500
