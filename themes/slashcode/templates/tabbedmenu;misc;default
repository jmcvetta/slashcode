__section__
default
__description__
Prints a tabbed menu bar.

* user = the current user, of course. needed for background color
* tabs = array of tabs, each tab hashref with keys "link", "label" and "sel_label"
* tab_selected = the label of the selected tab
* justify = 'left' or 'right', default is left
* color = 'colored' or 'white', default is colored - this is whether
  or not the selected tab should match colored or white background
  below it

__title__

__page__
misc
__lang__
en_US
__name__
tabbedmenu
__template__
<!-- tabbedmenu fg/bg
bg 0=[% user.bg.0 %] 1=[% user.bg.1 %] 2=[% user.bg.2 %] 3=[% user.bg.3 %] 4=[% user.bg.4 %]
fg 0=[% user.fg.0 %] 1=[% user.fg.1 %] 2=[% user.fg.2 %] 3=[% user.fg.3 %] 4=[% user.fg.4 %]
fg 0=#FFFFFF 1=#000000 2=#000000 3=#FFFFFF 4=#CCCCCC
bg 0=#000000 1=#FFFFFF 2=#CCCCCC 3=#006666 4=#CCCCCC
-->
[% save_tab_selected = tab_selected %]
[% IF justify != 'right'; justify = 'left'; END %]
[% IF color != 'white'; color = 'colored'; END %]
[% IF color == 'colored';
	details = {
		bg_line_color		=> user.bg.1,
		lt_corner_sel		=> constants.imagedir _ '/menu_wwx.gif',
		lt_corner_unsel		=> constants.imagedir _ '/menu_wwo.gif',
		bg_tab_sel		=> constants.imagedir _ '/menu_wobg.gif',
		bg_tab_unsel		=> constants.imagedir _ '/menu_wxbg.gif',
		bg_tab_sel_color	=> user.bg.3,
		bg_tab_unsel_color	=> user.bg.2,
		fg_tab_sel_color	=> user.fg.3,
		fg_tab_unsel_color	=> user.fg.2,
		lt_sel_rt_unsel		=> constants.imagedir _ '/menu_wox.gif',
		lt_unsel_rt_unsel	=> constants.imagedir _ '/menu_wxx.gif',
		lt_unsel_rt_sel		=> constants.imagedir _ '/menu_wxo.gif',
		rt_corner_sel		=> constants.imagedir _ '/menu_wow.gif',
		rt_corner_unsel		=> constants.imagedir _ '/menu_wxw.gif',
	};
ELSE;
	details = {
		bg_line_color		=> user.bg.3,
		lt_corner_sel		=> constants.imagedir _ '/menu_ggo.gif',
		lt_corner_unsel		=> constants.imagedir _ '/menu_ggx.gif',
		bg_tab_sel		=> constants.imagedir _ '/menu_bgo.gif',
		bg_tab_unsel		=> constants.imagedir _ '/menu_bgx.gif',
		bg_tab_sel_color	=> user.bg.1,
		bg_tab_unsel_color	=> user.bg.2,
		fg_tab_sel_color	=> user.fg.1,
		fg_tab_unsel_color	=> user.fg.2,
		lt_sel_rt_unsel		=> constants.imagedir _ '/menu_gox.gif',
		lt_unsel_rt_unsel	=> constants.imagedir _ '/menu_gxx.gif',
		lt_unsel_rt_sel		=> constants.imagedir _ '/menu_gxo.gif',
		rt_corner_sel		=> constants.imagedir _ '/menu_gog.gif',
		rt_corner_unsel		=> constants.imagedir _ '/menu_gxg.gif',
	};
END %]
<NOBR>
<TABLE WIDTH="100%" valign="MIDDLE" CELLPADDING="0" CELLSPACING="0">
	<TR BGCOLOR="[% details.bg_tab_unsel_color %]">
[% FOREACH tab = tabs;
	IF loop.first;
		tabtmpl = "start_tab";
	ELSIF !loop.last;
		tabtmpl = "mid_tab";
	ELSE;
		tabtmpl = "end_tab";
	END;
	"<!-- tablabel $tab.label tabsellabel $tab.sel_label tabtmpl $tabtmpl tl '" _ (tab.label == save_tab_selected) _ "' tsl '" _ (tab.sel_label == save_tab_selected) _ "' ns '" _ (loop.next && (loop.next.label == save_tab_selected || loop.next.sel_label == save_tab_selected)) _ "' -->";
	PROCESS $tabtmpl link=tab.link label=tab.label
		justify=justify color=color details=details
		tab_is_selected=(tab.label == save_tab_selected || tab.sel_label == save_tab_selected)
		next_tab_is_selected=(loop.next && (loop.next.label == save_tab_selected || loop.next.sel_label == save_tab_selected));
END %]
	</TR>
</TABLE>
</NOBR>
__seclev__
10000
