#!/usr/bin/perl -w

# This code is a part of Slash, and is released under the GPL.
# Copyright 1997-2004 by Open Source Development Network. See README
# and COPYING for more information, or see http://slashcode.com/.
# $Id: convertDBto200406_prune,v 1.1 2004/06/20 16:50:47 jamiemccarthy Exp $

# This script checks over the topic tree that has been generated
# by convertDBto200406, and emits SQL DELETE commands which may
# produce a higher-quality tree, by eliminating unnecessary
# topic_parent relationships..

use strict;
use File::Basename;
use Getopt::Std;
use Data::Dumper;
use Slash;
use Slash::Utility;

use vars qw( $slashdb
        $stoids );

(my $VERSION) = ' $Revision: 1.1 $ ' =~ /\$Revision:\s+([^\s]+)/;
my $PROGNAME = basename($0);

my (%opts, $tree);
# Remember to doublecheck these match usage()!
usage('Options used incorrectly') unless getopts('hu:', \%opts);
usage() if $opts{h};
die "Username required" unless $opts{u};

createEnvironment($opts{u});
$slashdb = getCurrentDB();

$tree = $slashdb->getTopicTree();

for my $tid (sort { $a <=> $b } keys %$tree) {
	my @parents = (sort { $a <=> $b } keys %{$tree->{$tid}{parent}});
#	print "$tid = $tid, parents = '@parents'\n";
	next unless scalar(@parents) > 1;
	for my $pid (@parents) {
		my $pid_min_weight = $tree->{$tid}{parent}{$pid};
#		print "checking whether $pid is parent of $tid thru another parent of $tid using min_weights no greater than $pid_min_weight\n";
		my @other_parents = grep { $_ != $pid } @parents;
		my $can_delete = 0;
		for my $other_pid (@other_parents) {
			my $is = $slashdb->isTopicParent($pid, $other_pid,
				{ min_min_weight => $pid_min_weight });
			if ($is) {
#				print "\tyep, $pid -> $other_pid -> $tid works as well as $pid -> $tid\n";
				$can_delete = 1;
				last;
			} else {
#				print "\tno $pid -> $other_pid, at least not with min_min_weight $pid_min_weight\n";
			}
		}
		if ($can_delete) {
			print "DELETE FROM topic_parents WHERE tid=$tid AND parent_tid=$pid;\n";
		}
	}
}

