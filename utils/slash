#!/bin/sh
# This code is a part of Slash, and is released under the GPL.
# Copyright 1997-2002 by Open Source Development Network. See README
# and COPYING for more information, or see http://slashcode.com/.
# $Id: slash,v 1.13 2002/11/25 23:45:55 brian Exp $

# /etc/init.d/slash
#
# written by Yazz Atlas for the Slashteam... 
# 	with assists from:
#		Jamie McCarthy
#		Cliff Wood
#

PATH="/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:\
				/usr/local/sbin:/usr/bin/X11:/usr/X11R6/bin";

# Slash home
DATADIR="/usr/local/slash";
SLASHD="$DATADIR/sbin/slashd";
SLASHSITE="$DATADIR/slash.sites";

# To figure out where things are...
TZ="GMT";
export TZ ;
WHICH_CAT=`which cat`;
WHICH_CUT=`which cut`;
WHICH_PS=`which ps`;
WHICH_GREP=`which grep`;

# This prolly ain't 100% accurate, but it should be good enough.
WHICH_UNAME=`which uname`;
WHICH_AWK=`which awk`;

OS=`$WHICH_UNAME | $WHICH_AWK '{print $1}'`;

if [ ! -f $SLASHSITE ] ; then
	echo "[0;31mNOT[1;m Starting slashd:[0;31m No[1;m $SLASHSITE";
	exit 0;
fi

GRAB_CONFIG=`$WHICH_CAT $SLASHSITE | $WHICH_CUT -d"#" -f1`;

start_slashd(){

# There are differing syntaxes of 'su' between OSes
# and even between different distributions of the same
# OS. If you have an OS that isn't listed here (or is
# a different case of one listed here [ie Red Hat Linux,
# Debian Linux]) please add in the necessary logic and
# send in a patch. Thanks!
#
# - Slashteam (slashteam@osdn.com)

# if you aren't using GMT for internal dates, please change
# the appropriate lines, below.
if [ "$OS" = "FreeBSD" ] ; then
	su - $USERNAME "-c 'TZ=GMT $SLASHD $SERVER_NAME'" &
elif [ "$OS" = "Linux" ] ; then 
	su - $USERNAME -c "TZ=GMT $SLASHD $SERVER_NAME" &
else
	su - $USERNAME -c "TZ=GMT $SLASHD $SERVER_NAME" &
fi
}

break_parts(){
#
# This is used over and over to break apart the need
# variables
#
SERVER_NAME=`echo $server_name |$WHICH_CUT -d":" -f1`;
USERNAME=`echo $server_name |$WHICH_CUT -d":" -f2`;
SITENAME=`echo $server_name |$WHICH_CUT -d":" -f3`;
RUNNINGPID="$DATADIR/site/$SITENAME/logs/slashd.pid";
}

stop_slashd(){
#
# This will restart and remove any left over PID files
# since they can't help anyone. Oh wait the are useful
# to verify is slashd is really running. The keepalive
# choice looks for thoses PID files to see if slashd
# is hanging about
#
if [ -f $RUNNINGPID ] ; then
	echo -n "Stopping slashd $SERVER_NAME: ";
		if ! kill `$WHICH_CAT $RUNNINGPID` ; then
			echo -n "...using kill -9 to make sure ..." ;
			sleep 3
			kill -9 `$WHICH_CAT $RUNNINGPID`;
			rm -f $RUNNINGPID;
		fi
	echo "ok.";
		else
	echo "Slashd $SERVER_NAME has no PID file";
fi
}

check_variable(){
#
# Just want to print things out so I can see what we are 
# getting 
#
echo "SERVER_NAME=$SERVER_NAME";
echo "USERNAME=$USERNAME";
echo "SITENAME=$SITENAME";
echo "RUNNINGPID=${RUNNINGPID}";
echo "PID=`cat ${RUNNINGPID}`";
}

# 
# Ok now that we set thing above it just matter of calling them in the right
# order. I broke thing up in to functions since I was tired of retyping the 
# same things over and over.
#

if [ -z "`echo $GRAB_CONFIG | $WHICH_GREP :`" ]; then
	echo "[0;31mNOT[1;m Starting/stopping slashd:[0;31m No[1;m sites in $SLASHSITE";
	exit 0;
fi

case "$1" in
  start)
		for server_name in $GRAB_CONFIG; do
			break_parts;
			echo -n "Starting slashd $SERVER_NAME: ";
			start_slashd;
			echo "ok PID = $! ";
		done
    ;;
  stop)
    for server_name in $GRAB_CONFIG; do
			break_parts;
			stop_slashd;
		done
      ;;
   keepalive)
		for server_name in $GRAB_CONFIG; do
			break_parts;
			if [ ! -f $RUNNINGPID ] ;then
				echo "Slashd for $SITENAME down no PID file restarting ";
				start_slashd;
			else
				# 
				# Ok this might now work on every platform since the "ps"
				# is different on alot of OS's
				# 
				# Wonce people submit fixes I will pull this into a similar
				# check like the one for "su"
				#
					if ! $WHICH_PS wh -p `$WHICH_CAT $RUNNINGPID` | $WHICH_GREP slashd > /dev/null ; then
						echo "Slashd $SITENAME  down no valid PID";
					  rm -f $RUNNINGPID;	
						start_slashd;
					fi
			fi
		done
		;;		
  restart)
		$0 stop;
		echo "Need to sleep 10 seconds to be clean"; 
		sleep 10;
		$0 start;
    ;;
	checkvars)
    echo " ";
    echo " The contents of $SLASHSITE";
    echo " which are in the variable GRAB_CONFIG";
    echo " ";
		echo "$GRAB_CONFIG";
    echo " ";
		for server_name in $GRAB_CONFIG; do
			echo " ";
			break_parts;
			check_variable;
		done
		echo " ";
		;;

  *)
		echo "Debian Usage: /etc/init.d/$0 {start|stop|restart|keepalive|checkvars}"
		echo "Redhat Usage: /etc/rc.d/init.d/$0 {start|stop|restart|keepalive|checkvars}"
		echo "Other Usage: /usr/local/sbin/$0 {start|stop|restart|keepalive|checkvars}"
    exit 1
    ;;
esac

exit 0 ;
