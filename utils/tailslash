#!/usr/bin/perl

###############################################################################
# tailslash 
# This tails the accesslog table 
#
# Copyright (C) 1997 Rob "CmdrTaco" Malda
# malda@slashdot.org
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#
#  $Id: tailslash,v 1.2 2000/05/16 20:43:34 pudge Exp $
###############################################################################

use lib("../");
use Slash;

if(@ARGV[0] eq "today") {
	my ($c)=sqlSelectMany("count(*),date_format(ts,\"%d_%H\") as h,
				date_format(ts,\"%d\") as d",
		"accesslog", "1=1",
#		"to_days(now()) = to_days(ts)",
		"GROUP BY H ORDER BY H ASC");
	my ($total,$today);
	while(my ($cnt,$h,$d)=$c->fetchrow()) {
		$total=0 unless $today == $d;
		$today=$d;
		$total+=$cnt;
		print "| $h | $cnt  \t| $total  \t| ".sprintf("%.2f",$cnt/3600)."\n";
	}
	print "$total pages served so far today.\n";

	exit;
}
my ($id)=sqlSelect("max(id)","accesslog"); 
my $total;
my $starttime=time;

while(1) {
    sleep 3;
    my $c=sqlSelectMany("host_addr,uid,op,dat,
		     date_format(ts,\"\%H:\%i\") as ts,id",
		     "accesslog","id > $id",
	             "ORDER BY ts DESC");

    my $sec=time - $starttime;
    $total+=$c->rows;

    print "$sec\t| ".$c->rows."\t| ".sprintf("%.2f",$total/$sec)."\n" if $ARGV[0] eq "sec";
    while(my $U=$c->fetchrow_hashref()) {
	my $w="$$U{ts} $$U{host_addr} ($$U{uid})";
	$w.= "\t" if length $w < 24;
	$w.= "\t$$U{op}";
	$w.= "\t" if length($$U{op}) < 8;
	$w.= "\t$$U{dat}\n";
	print $w unless $ARGV[0] eq "sec";
	$id=$$U{id} if $$U{id} > $id;
    }

    $c->finish();
}
